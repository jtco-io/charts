apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "backstage.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "backstage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/app-config.yaml") . | sha256sum }}
      labels:
        {{- include "backstage.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backstage.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /api/healthcheck
              port: http
          env:
          {{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 10 }}
          {{- end }}
          {{- if .Values.postgresql.enabled }}
          - name: POSTGRES_HOST
            value: {{ include "backstage.fullname" . }}-postgresql
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.postgresql.existingSecret}}
                key: postgresql-password
          - name: POSTGRES_DATABASE
            value: {{ .Values.postgresql.postgresqlDatabase }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: /app/app-config.yaml
            subPath: "app-config.yaml"
      volumes:
      - name: config
        configMap:
          name: {{ include "backstage.fullname" . }}-app-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
