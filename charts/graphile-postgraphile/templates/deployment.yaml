apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphile-postgraphile.fullname" . }}
  labels:
    {{- include "graphile-postgraphile.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "graphile-postgraphile.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "graphile-postgraphile.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [ "yarn", "workspace", "backend" , "start" ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            initialDelaySeconds: 5
          env:
            - name: NODE_ENV
              value: "production"
            - name: DATABASE_OWNER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseCredentialSecrets.owner }}
                  key: databaseURI
            - name: DATABASE_OWNER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseCredentialSecrets.authenticator }}
                  key: databaseURI
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backendSecret }}
                  key: secret
